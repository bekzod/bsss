{"name":"Bsss","tagline":"Inspired by JSss simple S3 uploading API","body":"BSSS\r\n----\r\nMultipart S3 file uploader, simultaneously uploads several parts. Buffers upload chunks until they are fully uploaded. The module might not be scalable but good for reliable upload to S3. \r\n\r\n\r\nUsage\r\n----\r\n\r\n```javascript\r\n\r\n    var fs = require('fs'),\r\n    stream = fs.createReadStream(__dirname+'/../data.mov'),\r\n    Bsss   = require('bsss');\r\n    \r\n    var bsss = new Bsss({\r\n            key      : process.env.AWS_KEY,\r\n            secret   : process.env.AWS_SECRET,\r\n            bucket   : process.env.AWS_BUCKET,\r\n            endPoint : process.env.AWS_ENDPOINT,\r\n    })\r\n\r\n    var upload = bsss.upload('/path',stream,{\r\n            integrityCheck    : true,\r\n            retry             : 3,\r\n            concurrency       : 3,\r\n            bufferSize        : '15mb'\r\n        });\r\n    \r\n    bsss.on(\"finished\",function(){\r\n        console.log('finished')\r\n    });\r\n    \r\n    //bsss.destroy() // destroyes all uploades\r\n\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}